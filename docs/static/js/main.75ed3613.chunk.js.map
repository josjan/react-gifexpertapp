{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"oMAEaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAsBA,OAEI,sBAAMC,SAjBW,SAACC,GAElBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAG5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MASlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA3Bc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+CCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAgBZM,GAhBY,4CAAH,sDCDPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAON,IACxB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAGGqB,EDtB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAGrB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAqDhB,EAArD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADEA,EAAIC,aEf1BgB,EAAe,WAGxB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAaA,GADNA,YAUnChB,EAAY6C,UAAY,CACpB5C,cAAe6C,IAAUC,KAAKC,Y,MCvBlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.75ed3613.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState(''); // undefined!\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n\r\n            // console.log('Submit hecho')\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setinputValue('');\r\n\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit = { handleSubmit }>\r\n        \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n       \r\n    )\r\n}\r\n\r\n\r\n","\r\n\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=HJ6rQOh0KUVHtNZEUM8hJa9f4UJJ3K5G`\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridGifItem = ({ id, title, url }) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={ url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GridGifItem } from './GridGifItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs( category );   \r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'> { category } </h3>\r\n\r\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GridGifItem  \r\n                            key = {img.id}\r\n                            { ...img }  \r\n                        />\r\n                    ))\r\n                }\r\n            \r\n            </div>\r\n        \r\n        </>\r\n        \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => { \r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n    \r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {               \r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n    return state; // { data:[], loading: true }\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport PropTypes from 'prop-types'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {   \r\n    \r\n    \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( (category) => \r\n                        <GifGrid  \r\n                            key= { category }\r\n                            category = { category } />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render( \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n// <h2>GifExpertApp</h2>\n// <hr />\n\n"],"sourceRoot":""}